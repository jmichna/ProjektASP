// <auto-generated />
using System;
using Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240122140812_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Data.Entities.LibraryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfRelease")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_of_release");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("TEXT");

                    b.Property<int>("PageNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("page_number");

                    b.Property<int>("PublishingHouseId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("publishing_house_id");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER")
                        .HasColumnName("rating");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PublishingHouseId");

                    b.ToTable("library");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Autor = "Adam Abc",
                            DateOfRelease = new DateTime(2000, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "12345678987654321",
                            PageNumber = 69,
                            PublishingHouseId = 1,
                            Rating = 1,
                            Title = "Title"
                        },
                        new
                        {
                            Id = 2,
                            Autor = "Dawid GBC",
                            DateOfRelease = new DateTime(1999, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "98765432123456789",
                            PageNumber = 213,
                            PublishingHouseId = 2,
                            Rating = 3,
                            Title = "Titleeeeee"
                        });
                });

            modelBuilder.Entity("Data.Entities.PublishingHouseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublishingHouseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PublishingHouse");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PublishingHouseName = "PenguinRandomHouse",
                            Region = "12343221224"
                        },
                        new
                        {
                            Id = 2,
                            PublishingHouseName = "OxfordUniversityPress",
                            Region = "84730192837"
                        },
                        new
                        {
                            Id = 3,
                            PublishingHouseName = "CambridgeUniversityPress",
                            Region = "912872162237"
                        });
                });

            modelBuilder.Entity("Data.Entities.LibraryEntity", b =>
                {
                    b.HasOne("Data.Entities.PublishingHouseEntity", "PublishingHouse")
                        .WithMany("Library")
                        .HasForeignKey("PublishingHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublishingHouse");
                });

            modelBuilder.Entity("Data.Entities.PublishingHouseEntity", b =>
                {
                    b.OwnsOne("Data.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<int>("PublishingHouseEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Region")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("PublishingHouseEntityId");

                            b1.ToTable("PublishingHouse");

                            b1.WithOwner()
                                .HasForeignKey("PublishingHouseEntityId");

                            b1.HasData(
                                new
                                {
                                    PublishingHouseEntityId = 1,
                                    City = "Gsbagga",
                                    PostalCode = "736252",
                                    Region = "wygwizdowo",
                                    Street = "tsdsv"
                                },
                                new
                                {
                                    PublishingHouseEntityId = 2,
                                    City = "Oxford",
                                    PostalCode = "7326251",
                                    Region = "fgegrbg",
                                    Street = "qwweeefqw"
                                });
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Data.Entities.PublishingHouseEntity", b =>
                {
                    b.Navigation("Library");
                });
#pragma warning restore 612, 618
        }
    }
}
